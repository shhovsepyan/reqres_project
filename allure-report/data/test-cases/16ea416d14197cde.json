{"uid":"16ea416d14197cde","name":"Test delete user","fullName":"test_14delete_user#test_delete_user","historyId":"33ecb9791ad767ceabbfbc2657297b22","time":{"start":1720558591113,"stop":1720558591453,"duration":340},"description":"This test case verifies deleting a user","descriptionHtml":"<p>This test case verifies deleting a user</p>\n","status":"failed","statusMessage":"AssertionError: Expected status code 404, but got 200\nassert 200 == 404\n +  where 200 = <Response [200]>.status_code","statusTrace":"@allure.feature(\"TEST REQRES.IN\")\n    @allure.suite(\"TEST NEW PROJECT\")\n    @allure.title(\"Test delete user\")\n    @allure.description(\"This test case verifies deleting a user\")\n    @pytest.mark.smoke\n    def test_delete_user():\n        request_url = test_1register.base_url + \"api/users/2\"\n        headers = {\n            'token': test_3login_user.authorization_token\n        }\n    \n        with allure.step(\"Send DELETE request to delete user\"):\n            response = requests.delete(request_url, headers=headers)\n            print(response)\n            assert response.status_code == 204, f\"Expected status code 204, but got {response.status_code}\"\n    \n        with allure.step(\"Verify user deletion by sending a GET request\"):\n            check_response = requests.get(request_url)\n    \n>           assert check_response.status_code == 404, f\"Expected status code 404, but got {check_response.status_code}\"\nE           AssertionError: Expected status code 404, but got 200\nE           assert 200 == 404\nE            +  where 200 = <Response [200]>.status_code\n\ntest_14delete_user.py:29: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test case verifies deleting a user","status":"failed","statusMessage":"AssertionError: Expected status code 404, but got 200\nassert 200 == 404\n +  where 200 = <Response [200]>.status_code","statusTrace":"@allure.feature(\"TEST REQRES.IN\")\n    @allure.suite(\"TEST NEW PROJECT\")\n    @allure.title(\"Test delete user\")\n    @allure.description(\"This test case verifies deleting a user\")\n    @pytest.mark.smoke\n    def test_delete_user():\n        request_url = test_1register.base_url + \"api/users/2\"\n        headers = {\n            'token': test_3login_user.authorization_token\n        }\n    \n        with allure.step(\"Send DELETE request to delete user\"):\n            response = requests.delete(request_url, headers=headers)\n            print(response)\n            assert response.status_code == 204, f\"Expected status code 204, but got {response.status_code}\"\n    \n        with allure.step(\"Verify user deletion by sending a GET request\"):\n            check_response = requests.get(request_url)\n    \n>           assert check_response.status_code == 404, f\"Expected status code 404, but got {check_response.status_code}\"\nE           AssertionError: Expected status code 404, but got 200\nE           assert 200 == 404\nE            +  where 200 = <Response [200]>.status_code\n\ntest_14delete_user.py:29: AssertionError","steps":[{"name":"Send DELETE request to delete user","time":{"start":1720558591113,"stop":1720558591410,"duration":297},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Verify user deletion by sending a GET request","time":{"start":1720558591412,"stop":1720558591451,"duration":39},"status":"failed","statusMessage":"AssertionError: Expected status code 404, but got 200\nassert 200 == 404\n +  where 200 = <Response [200]>.status_code\n","statusTrace":"  File \"C:\\Users\\Lenovo\\Desktop\\QA Automation\\reqres\\test_14delete_user.py\", line 29, in test_delete_user\n    assert check_response.status_code == 404, f\"Expected status code 404, but got {check_response.status_code}\"\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[{"uid":"b75d99eee7d6c492","name":"stdout","source":"b75d99eee7d6c492.txt","type":"text/plain","size":17}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":2,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"feature","value":"TEST REQRES.IN"},{"name":"suite","value":"TEST NEW PROJECT"},{"name":"tag","value":"smoke"},{"name":"host","value":"DESKTOP-08S36KF"},{"name":"thread","value":"7312-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_14delete_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"16ea416d14197cde.json","parameterValues":[]}